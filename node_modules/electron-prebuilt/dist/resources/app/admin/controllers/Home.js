var Home = (function() {
  var Home = {
    controller: function() {

    },
    view: function(ctrl) {
      var w = app.activeClassroom().dimensions.width(),
        h = app.activeClassroom().dimensions.height();

      var wallDir = ['top', 'right', 'bottom', 'left'];
      var accentWall = 'border-' + wallDir[app.activeClassroom().accentWall.location() - 1] + ': 5px solid ' + app.activeClassroom().accentWall.color() + ';';

      return (
        m('div', [
          m('div.row', [
            m('div.panel.panel-default#device-well', {
              'style':
                'position: relative;' +
                'background-color: #f5f5f5;' +
                accentWall +
                'margin-left: auto; margin-right: auto;' +
                'width: ' + 60 + 'vw;' +
                'height: ' + (h / w) * 60 + 'vw;'
              }, [
                app.activeClassroom().devices.map(function(device, index) {
                  return m.component(DeviceView, {'device': device, '_id': device._id(), 'classroomDimensions': app.activeClassroom().dimensions});
                }),
                m.component(AddDevice)
              ]
            )
          ]),
          m.component(AppDock)
        ])
      );
    }
  };

  var AppDock = {
    'controller': function(args) {
      return {
        'apps': m.request({'method': 'GET', 'url': '../api/apps'})
      };
    },
    'view': function(ctrl) {
      return (
        m('div#dock-container', [
          m('div#dock', [
            m('ul', ctrl.apps().map(function(app, index) {
              return (
                m('li', [
                  m('span', [app.title]),
                  m('a', {'href': 'javascript:void(0)'}, [
                    m('img.docked.appIcon', {'src': '../apps/' + app.path + '/' + app.icon, 'data-path': app.path})
                  ])
                ])
              );
            })),
            m('div.base')
          ])
        ])
      );
    }
  };

  var DeviceView = {
    controller: function (args) {
      return {
        '_id': m.prop(args._id),
        'device': m.prop(args.device),
        'classroomDimensions': args.classroomDimensions
      };
    },
    view: function(ctrl) {
      var device = ctrl.device();
      var x = device.location.x() / 100 * (60 / 100 * document.documentElement.clientWidth),
        y = device.location.y() / 100 * ((ctrl.classroomDimensions.height() / ctrl.classroomDimensions.width() * 60) / 100 * document.documentElement.clientWidth);

      return m('div.deviceTile' + (device.connected() ? '.deviceActive' : ''), {
        'data-id': ctrl._id(),
        'style': 'position: absolute; webkit-transform: translate(' + x + 'px, ' + y + 'px); transform: translate(' + x + 'px, ' + y + 'px);',
        'data-x': x,
        'data-y': y,
        'onmouseup': function(e) {
            if (typeof e.target.parentNode.dataset.x === 'undefined') return;
            ctrl.device().location.x(Math.round(100 * 100 * e.target.parentNode.dataset.x / (60 * document.documentElement.clientWidth)));
            ctrl.device().location.y(Math.round(100 * 100 * e.target.parentNode.dataset.y / ((ctrl.classroomDimensions.height() / ctrl.classroomDimensions.width() * 60) * document.documentElement.clientWidth)));
            ctrl.device().save();
          }
        }, [
        m('div.panel.panel-default.resizeTile', {'style':
          'margin-left: auto; margin-right: auto;' +
          'background-color: ' + (device.connected() ? device.color() : 'gray') + ';' +
          'width: ' + device.screen.width() + 'vw;' +
          'height: ' + device.screen.height() + 'vw;',
          'onmouseup': function(e) {
            ctrl.device().screen.width(parseInt(e.target.style.width.replace('vw', '')));
            ctrl.device().screen.height(parseInt(e.target.style.height.replace('vw', '')));
          }
        }),
        m('div', {'style': 'text-align: center; margin-top: -1em'}, device.name())
      ]);
    }
  };

  var AddDevice = {
    controller: function(args) {
      var deviceToAdd = m.prop(null);
      var addDevice = function() {
        deviceToAdd().save().then(function(device) {
          app.activeClassroom().devices.push(device);
        });
        deviceToAdd(null);
      };
      return {
        'deviceToAdd': deviceToAdd,
        'addDevice': addDevice
      };
    },
    view: function(ctrl) {
      var toggle;
      if (ctrl.deviceToAdd() === null)
        toggle = (
          m('button.btn.btn-lg.btn-success', {
            'style': 'border-radius: 50%',
            'onclick': function(e) {
              ctrl.deviceToAdd(new DeviceModel({'location': {'x': 0, 'y': 0}, 'screen': {'width': parseInt(app.activeClassroom().dimensions.width() / 25), 'height': parseInt(app.activeClassroom().dimensions.width() / 25)}}));
            }
          }, [
            "+"
          ])
        );
      else
        toggle = (
          m('div.panel.panel-default', {'style': 'padding: 1em'},
            m('form', [
              m('input.form-group.form-control', {
                'placeholder': 'Device name',
                'oninput': m.withAttr('value', ctrl.deviceToAdd().name),
                'value': ctrl.deviceToAdd().name() || ''
              }),
              m('input.form-group.form-control', {
                'placeholder': 'Device color',
                'style': 'background-color: ' + ctrl.deviceToAdd().color(),
                'oninput': m.withAttr('value', ctrl.deviceToAdd().color),
                'value': ctrl.deviceToAdd().color() || ''
              }),
              m('button.btn.btn-success', {
                'onclick': ctrl.addDevice
              }, [
                'Create'
              ])
            ])
          )
        );
      return m('div', {'style': 'position: absolute; bottom: 0.5em; right: 0.5em'}, toggle);
    }
  };

  return Home;
}());
