var Home = (function() {
  var Home = {
    view: function(ctrl, args) {
      var classroom = args.classroom();
      var w = classroom.dimensions.width,
          h = classroom.dimensions.height,
          accentWall = classroom.accentWall;

      var wallDir = ['top', 'right', 'bottom', 'left'];
      var wallStyle = 'border-' + wallDir[accentWall.location - 1] + ': 5px solid ' + accentWall.color + ';';

      return (
        m('div', [
          m('div.row', [
            m('div.panel.panel-default#device-well', {
                'style': wallStyle + 'width: ' + 60 + 'vw;' + 'height: ' + (h / w) * 60 + 'vw;'
              }, [
                classroom.devices.map(function(device, index) {
                  return m.component(DeviceView, {'device': device, 'index': index, 'classroomDimensions': classroom.dimensions});
                })
              ]
            )
          ]),
          m.component(AppDock)
        ])
      );
    }
  };

  var AppDock = {
    'controller': function(args) {
      return {
        'apps': m.request({'method': 'GET', 'url': '/api/apps'})
      };
    },
    'view': function(ctrl) {
      return (
        m('div#dock-container', [
          m('div#dock', [
            m('ul', ctrl.apps().map(function(app, index) {
              return (
                m('li', [
                  m('span', [app.title]),
                  m('div', [
                    m('img.docked.appIcon', {'src': '/apps/' + app.path + '/icon', 'data-path': app.path})
                  ])
                ])
              );
            })),
            m('div.base')
          ])
        ])
      );
    }
  };

  var DeviceView = {
    controller: function(args) {
      return {
        'toggled': false
      };
    },
    view: function(ctrl, args) {
      var x = args.device.location.x / 100 * (60 / 100 * document.documentElement.clientWidth),
        y = args.device.location.y / 100 * ((args.classroomDimensions.height / args.classroomDimensions.width * 60) / 100 * document.documentElement.clientWidth);

      return (
        m('div.deviceTile' + (args.device.connected ? '.deviceActive' : ''), {
          'data-index': args.index,
          'style': 'position: absolute; webkit-transform: translate(' + x + 'px, ' + y + 'px); transform: translate(' + x + 'px, ' + y + 'px);',
          'data-x': x,
          'data-y': y,
          'onclick': function(e) {
            ctrl.toggle = true;
          },
          'onmouseout': function(event) {
            var e = event.toElement || event.relatedTarget;
            if (e.parentNode.parentNode == this || e.parentNode == this || e == this)
               return;
            ctrl.toggle = false;
          }
        }, [
          m('div.panel.panel-default.resizeTile', {
            'style':
              'position: relative; ' +
              'background-color: ' + (args.device.connected ? args.device.color : 'gray') + ';' +
              'width: ' + args.device.screen.width + 'vw;' +
              'height: ' + args.device.screen.height + 'vw;',
          }, [
            m('img', {
              'src': '/apps/' + args.device.appId + '/icon',
              'style': (args.device.appId !== '' && args.device.connected ? 'display: visible; ' : 'visibility: hidden; ') +
                'margin: auto; width: 64px; height: 64px; position: absolute; top: 0; left: 0; bottom: 0; right: 0'
            })
          ]),
          m('div.deviceName', args.device.name),
          m('div.btn-group', {
            'style': (ctrl.toggle ? 'visibility: visible' : 'visibility: hidden')
            }, [
              m('button.btn.btn-default', {
                'onclick': function() {
                  window.open(window.location.origin + '/#' + m.route.param('classroom') + '/' + args.index, '_blank');
                }
              }, ['Peek']),
              m('button.btn.btn-default', {
                'onclick': function() {
                  stm.try(function(state) {
                    var base = state.appRoot[state.devices[args.index].appId()].deviceState[state.devices[args.index]._id()];
                    base('frozen', true);
                  });
                }
              }, ['Freeze']),
              m('button.btn.btn-default', {
                'onclick': function() {
                  stm.try(function(state) {
                    var base = state.appRoot[state.devices[args.index].appId()].deviceState[state.devices[args.index]._id()];
                    base('frozen', false);
                  });
                }
              }, ['Unfreeze']),
              m('button.btn.btn-default', {
                'onclick': function() {
                  stm.try(function(state) {
                    state.devices[args.index]('appId', '');
                  }).then(function(state) {
                    ctrl.currentIcon = '';
                  });
                }
              }, ['Clear'])
          ])
        ])
      );
    }
  };

  return Home;
}());
