define(function() {
  var exports = {};
  var cb;

  exports.startApp = function(_cb, parentElement) {
    cb = _cb;
    css('/apps/numbernet/styles.css');
    cb.try(function(state) {
      if (typeof state.global('deviceState') === 'undefined')
        state.global('deviceState', {});
      if (typeof state.global.deviceState(state.device('id')) === 'undefined')
        state.global.deviceState(state.device('id'), {});
      var self = state.global.deviceState[state.device('id')];
      if (typeof self('results') === 'undefined')
        self('results', []);
      if (typeof self('calculators') === 'undefined')
        self('calculators', []);
      if (typeof self('calculators') !== 'undefined' && self('calculators').length === 0)
        self.calculators(0, {});
    }).then(function(state) {
      var self = state.global.deviceState[state.device('id')];
      self('calculators').forEach(function(calculator) {
        var calc = document.createElement('div');
        m.mount(calc, m.component(CalculatorView, calculator));
        parentElement.appendChild(calc);
      });
    }).done();
  };

  function applyTransform(element, calculator) {
    element.style.webkitTransform =
    element.style.transform =
      'translate(' + calculator.x + 'px, ' + calculator.y + 'px) rotate(' + calculator.angle + 'deg)';
  }

  var CalculatorView = {
    'controller': function(args) {
      args = args || {};
      return {
        'decimalClicked': false,
        'screen': ''
      };
    },
    'view': function(ctrl, calculator) {
      var keyOrder = [7, 8, 9, '+', 4, 5, 6, '-', 1, 2, 3, '÷', 0, '.', '=', '×'];
      var operators = ['+', '-', '÷', '×'];
      return (
        m('div#calculator', [
          m('div.top', [
            m('span.clear', {
              'onclick': function(e) {
                ctrl.screen = '';
                ctrl.decimalClicked = false;
              }
            }, ['C']),
            m('div.screen', [ctrl.screen])
          ]),
          m('div.keys',
            keyOrder.map(function(key) {
              var c;
              if (operators.indexOf(key) !== -1)
                c = '.operator';
              else if (key === '=')
                c = '.eval';
              else
                c = '';

              return m('span' + c, {
                'onclick': function(e) {
                  var last = ctrl.screen[ctrl.screen.length - 1];
                  if (!isNaN(key))
                    ctrl.screen += key;
                  else if (key === '.' && !isNaN(last) && !ctrl.decimalClicked) {
                    ctrl.screen += key;
                    ctrl.decimalClicked = true;
                  }
                  else if (operators.indexOf(key) !== -1 && operators.indexOf(last) === -1) {
                    ctrl.screen += key;
                    ctrl.decimalClicked = false;
                  }
                  else if (key === '='){
                    var result;
                    try {
                      result = eval(ctrl.screen); // replace div, multiply
                    } catch(e) {
                      result = false;
                    } finally {
                      if (result !== false) {
                        cb.try(function(state) {
                          var results = state.self.results();
                          results.push({'id': state.self.results().length, 'equation': ctrl.screen, 'result': result});
                          state.self.results(results);
                        });
                      }
                      else
                        ctrl.screen = '';
                    }
                  }
                }
              }, key);
            })
          )
        ])
      );
    }
  };

  return exports;
});
