var urlBase = (typeof require === 'undefined' ? window.location.origin : 'http://localhost:1867');

var ClassroomModel = function(args) {
  args = args || {};
    args.devices = args.devices || [];
    args.accentWall = args.accentWall || {};
    args.dimensions = args.dimensions || {};

  this._id = m.prop(args._id);
  this.name = m.prop(args.name);

  this.dimensions = {
    'height': m.prop(args.dimensions.height),
    'width': m.prop(args.dimensions.width)
  };
  this.accentWall = {
    'color': m.prop(args.accentWall.color),
    'location': m.prop(args.accentWall.location)
  };

  this.devices = args.devices.map(function(device) {
    return new DeviceModel(device);
  });
};

ClassroomModel.get = ClassroomModel.prototype.get = function(args) {
  return m.request({
    'method': 'GET',
    'url': urlBase + '/api/classroom/' + (args && args._id ? args._id() : ''),
    'type': ClassroomModel
  });
};

ClassroomModel.save = ClassroomModel.prototype.save = function(data) {
  data = data || this;
  data.devices = undefined;
  return m.request({
    'method': (typeof data._id() !== 'undefined' ? 'PUT' : 'POST'),
    'url': urlBase + '/api/classroom/' + (typeof data._id() !== 'undefined' ? data._id() : ''),
    'data': data,
    'type': ClassroomModel
  });
};

var DeviceModel = function(args) {
  args = args || {};
    args.screen = args.screen || {};
    args.location = args.location || {};

  this._id = m.prop(args._id);
  this.name = m.prop(args.name);
  this.color = m.prop(args.color);
  this.connected = m.prop(args.connected);
  this.screen = {
    'width': m.prop(args.screen.width),
    'height': m.prop(args.screen.height),
    'dpi': m.prop(args.screen.dpi)
  };
  this.location = {
    'x': m.prop(args.location.x),
    'y': m.prop(args.location.y)
  };
};

DeviceModel.get = DeviceModel.prototype.get = function(args) {
  return m.request({
    'method': 'GET',
    'url': urlBase + '/api/classroom/' + app.activeClassroom()._id() + '/device/' + (args && args._id ? args._id() : ''),
    'type': DeviceModel
  });
};

DeviceModel.save = DeviceModel.prototype.save = function(data) {
  data = data || this;
  console.log(data);
  return m.request({
    'method': (typeof data._id() !== 'undefined' ? 'PUT' : 'POST'),
    'url': urlBase + '/api/classroom/' + app.activeClassroom()._id() + '/device/' + (typeof data._id() !== 'undefined' ? data._id() : ''),
    'data': data,
    'type': DeviceModel
  });
};
