5/28

Basic timeline:

short-term/medium-term
1) restructure /api/apps to utilize a package.json system
  - add hook from AppDock component
  - make AppDock disappear on drag
  - drag and drop hints
  - have classroom automatically align/rotate to fit screen
2) reorganize the structure of an app to be loaded by loading a js file and calling start()
    - client app must implement:
      - start(el, state)
      - loadState(state)
      - exportState()
    - client api:
      - getClassroom(callback)
      - sendMessage(channel, message)
      - onMessage(channel, callback)
      - syncState(timeout, callback)
3) add resiliency features to websockets
  - ping/pong
  - try reconnect if disconnected, wait for reconnect attempt
  - destroy all connections on server quit
4) admin interface:
  - drag to resize tables, rotate, delete, edit
  - take away resolution functionality for devices (assign from interface rather than auto)
  - loading icon when app drag, display icon on load
  - simple menu ui + hooks
5) server interface:
  - change ports, etc

long-term/big picture
5) admin app interface, api, hooks
6) 'zones' to allow send app to multiple devices
  - devices will stack if zone small enough, tap zone to 'expand'
7) admin controls: freeze, peek/reflect
  - grab app+state and transfer to another table
8) user system (for administrators), user system (for users)
9) data save/export api
10) 'app store'
