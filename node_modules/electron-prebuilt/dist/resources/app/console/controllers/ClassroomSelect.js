var ClassroomSelect = (function() {
  var NewClassroomForm = {
    'controller': function(args) {
      return {
        'classrooms': args.classrooms,
        'newClassroom': m.prop(null)
      };
    },
    'view': function(ctrl) {
      if (ctrl.newClassroom() === null)
        return (
          m('a.list-group-item', {
            'onclick': function() {
              ctrl.newClassroom(new ClassroomModel());
            }
          }, [
            'Create new classroom'
          ])
        );
      else
        return (
          m('form', [
            m('h4', 'New classroom'),
            m('div.form-group', [
              m('input.form-control', {
                'placeholder': 'Classroom name',
                'oninput': m.withAttr('value', ctrl.newClassroom().name),
                'value': ctrl.newClassroom().name() || ''
              })
            ]),
            m('div.form-group.form-inline', [
              m('input.form-control', {
                'placeholder': 'X (~ft)',
                'oninput': m.withAttr('value', ctrl.newClassroom().dimensions.width),
                'value': ctrl.newClassroom().dimensions.width() || ''
              }),
              ' x ',
              m('input.form-control', {
                'placeholder': 'Y (~ft)',
                'oninput': m.withAttr('value', ctrl.newClassroom().dimensions.height),
                'value': ctrl.newClassroom().dimensions.height() || ''
              })
            ]),
            m('div.form-group.form-inline', [
              m('input.form-control', {
                'placeholder': 'Accent wall color',
                'style': 'background-color: ' + ctrl.newClassroom().accentWall.color(),
                'oninput': m.withAttr('value', ctrl.newClassroom().accentWall.color),
                'value': ctrl.newClassroom().accentWall.color() || ''
              }),
              ' ',
              m('select.form-control', {
                'oninput': m.withAttr('value', ctrl.newClassroom().accentWall.location),
                'value': ctrl.newClassroom().accentWall.location() || 1
              }, [
                m('option', {'value': 1}, 'Top'),
                m('option', {'value': 2}, 'Right'),
                m('option', {'value': 3}, 'Bottom'),
                m('option', {'value': 4}, 'Left')
              ])
            ]),
            m('button.btn.btn-success', {
              'onclick': function() {
                ctrl.newClassroom().save().then(function(classroom) {
                  ctrl.classrooms().push(classroom);
                });
                ctrl.newClassroom(null);
              }
            }, [
              'Create'
            ]), ' ',
            m('button.btn.btn-danger', {
              'onclick': function() {
                ctrl.newClassroom(null);
              }
            }, [
              'Cancel'
            ])
          ])
        );
    }
  };

  var main = {
    'controller': function() {
      return {
        'classrooms': ClassroomModel.get(),
      };
    },
    'view': function(ctrl) {
      return m('div.row', [
        m('div.col-md-4.col-md-offset-4', [
          m('div.list-group', [
            ctrl.classrooms().map(function(classroom) {
              return m('a.list-group-item', {'onclick': function() { app.setActiveClassroom(classroom._id); }}, classroom.name());
            }),
            m('br'),
            m.component(NewClassroomForm, {'classrooms': ctrl.classrooms})
          ])
        ])
      ]);
    }
  };

  return main;
}());
