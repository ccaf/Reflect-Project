var Home = (function() {
  var Home = {
    view: function(ctrl, args) {
      return (
        m('div', [
          m('div.row', [
            m('div.panel.panel-default#device-well', {
                'style': 'width: 60vw; height: 40vw'
              }, [
                classroom('devices').map(function(device, index) {
                  return m.component(DeviceView, {'device': device});
                })
              ]
            )
          ])//,
          //m.component(AppDock)
        ])
      );
    }
  };

  var AppDock = {
    'controller': function(args) {
      return {
        'apps': []
      };
    },
    'view': function(ctrl) {
      return (
        m('div#dock-container', [
          m('div#dock', [
            m('ul', ctrl.apps().map(function(app, index) {
              return (
                m('li', [
                  m('span', [app.title]),
                  m('div', [
                    m('img.docked.appIcon', {'src': '/apps/' + app.path + '/icon', 'data-path': app.path})
                  ])
                ])
              );
            })),
            m('div.base')
          ])
        ])
      );
    }
  };

  var DeviceView = {
    controller: function(args) {
      return {
        'toggled': false
      };
    },
    view: function(ctrl, args) {
      var device = args.device;
      var x = device.location.x / 100 * (60 / 100 * document.documentElement.clientWidth),
          y = args.device.location.y / 100 * (40 / 100 * document.documentElement.clientWidth);

      return (
        m('div.deviceTile' + (args.device.connected ? '.deviceActive' : ''), {
          'style': 'position: absolute; webkit-transform: translate(' + x + 'px, ' + y + 'px); transform: translate(' + x + 'px, ' + y + 'px);',
          'data-x': x,
          'data-y': y,
          'onmouseover': function(e) {
            ctrl.toggle = true;
          },
          'onmouseout': function(event) {
            var e = event.toElement || event.relatedTarget;
            if (e.parentNode.parentNode == this || e.parentNode == this || e == this)
               return;
            ctrl.toggle = false;
          }
        }, [
          m('div.panel.panel-default.resizeTile', {
            'style':
              'position: relative; ' +
              'background-color: ' + (args.device.connected ? args.device.color : 'gray') + ';' +
              'width: ' + args.device.screen.width + 'vw;' +
              'height: ' + args.device.screen.height + 'vw;',
          }, [
            m('img', {
              'src': '/apps/' + args.device.app + '/icon',
              'style': (args.device.appId !== '' && args.device.connected ? 'display: visible; ' : 'visibility: hidden; ') +
                'margin: auto; width: 64px; height: 64px; position: absolute; top: 0; left: 0; bottom: 0; right: 0'
            })
          ]),
          m('div.deviceName', args.device.name),
          m('div.btn-group.btn-group-sm', {
            'style': (ctrl.toggle ? 'visibility: visible' : 'visibility: hidden')
            }, [
              m('button.btn.btn-default', {
                'onclick': function() {
                  window.open(window.location.origin + '/#' + m.route.param('classroom') + '/' + device.id, '_blank');
                }
              }, ['Peek']),
              m('button.btn.btn-default', {
                'onclick': function() {
                  stm.try(function(state) {
                    state.devices[state('devices').map(function(d) { return d.id; }).indexOf(parseInt(device.id))]('frozen', !device.frozen);
                  });
                }
              }, [device.frozen ? 'Unfreeze' : 'Freeze']),
              m('button.btn.btn-default', {
                'onclick': function() {
                  stm.try(function(state) {
                    state.devices[state('devices').map(function(d) { return d.id; }).indexOf(parseInt(device.id))]('app', undefined);
                  });
                }
              }, ['Clear'])
          ])
        ])
      );
    }
  };

  return Home;
}());
