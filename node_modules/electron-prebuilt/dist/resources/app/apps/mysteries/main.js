define(function() {
  var exports = {};
  var cb;

  exports.start = function(_cb) {
    cb = _cb;
    css('/apps/mysteries/styles.css');
    var container = document.createElement('div');
    container.id = 'container';
    container.innerHTML = '&nbsp;';
    document.getElementById('app').innerHTML = '&nbsp;';
    cb.try(function(state) {
      if (!('cards' in state.self)) {
        var cards = [];
        for (var i = 0; i < 52; i++)
          cards.push({'hold': false, 'x': i * 15, 'y': 0, 'z': i, 'scale': 1, 'angle': 0, 'identifier': i});

        state.self('cards', cards);
        state.self('lastZ', 52);
      }
    }).then(function(state) {
      var element, background;
      state.self.cards().forEach(function(card, index) {
        element = document.createElement('div');
        element.className = "interact card";
        element.style.backgroundPosition = ((index % 13) * 225) + 'px ' + (parseInt(index / 13) * 315) + 'px';
        element.setAttribute('data-identifier', card.identifier);
        updateElement(element, card);
        document.getElementById('app').appendChild(element);
      });
    }).done();
  };

  exports.onchange = function(state) {
    var el;
    for (var i = 0; i < state.self.cards().length; i++)
      if ((el = document.getElementById('card-' + state.self.cards[i]().identifier)) !== null)
        updateElement(el, state.self.cards[i]());
  };

  function updateElement(element, card) {
    element.style['z-index'] = card.z;
    element.id = 'card-' + card.identifier;

    element.style.webkitTransform =
    element.style.transform =
      'translate(' + card.x + 'px, ' + card.y + 'px) rotate(' + card.angle + 'deg)';
  }

  function getCard(state, target) {
    var identifier = parseInt(target.getAttribute('data-identifier'));
    var index = state.self.cards.$$.data.map(function(c) {return c.identifier;}).indexOf(identifier);
    return state.self.cards[index];
  }

  var onstart = function (event) {
    cb.try(function(state) {
      card = getCard(state, event.target);
      if (!card.hold()) {
        card.hold(cb.uuid());
      }
    });
  };

  var onmove = function (event) {
    cb.try(function(state) {
      card = getCard(state, event.target);

      if (card.hold() == cb.uuid())
      {
        card.x(card.x() + event.dx);
        card.y(card.y() + event.dy);
        card.angle(card.angle() + (1 * (event.da || 0)));
        card.z(state.self.lastZ() + 1);
        state.self.lastZ(state.self.lastZ() + 1);
        updateElement(event.target, card());
      }
    });
  };

  var onend = function(event) {
    cb.try(function(state) {
      card = getCard(state, event.target);

      if (card.hold() == cb.uuid())
        card.hold(false);
    });
  };

  require(['/apps/mysteries/interact.js'], function(interact) {
    interact('.interact')
      .draggable({
        inertia: true,
        restrict: {restriction: '#container'},
        onstart: onstart,
        onmove: onmove,
        onend: onend
      })
      .gesturable({
        onstart: onstart,
        onmove: onmove,
        onend: onend
      });
  });
  return exports;
});
